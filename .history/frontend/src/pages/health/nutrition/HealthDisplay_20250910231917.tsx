import type { HealthData } from "../../../interface/HealthData";

interface Props {
  health: HealthData | null;
}

function HealthDisplay({ health }: Props) {
  if (!health) {
    return (
      <div style={emptyCardStyle}>
        <div style={emptyIconStyle}>‚ù§Ô∏è</div>
        <h3 style={emptyTitleStyle}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û</h3>
        <p style={emptySubtitleStyle}>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥</p>
        <p style={emptyTipsStyle}>‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á/‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û</p>
        <button style={emptyButtonStyle} onClick={() => window.location.assign("/health/Health")}>
          <span>üí™</span>
          ‡πÑ‡∏õ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û
        </button>
      </div>
    );
  }

  const dateText = new Date(health.date ?? new Date()).toLocaleDateString("th-TH");

  return (
    <div style={cardStyle}>
      <div style={headerStyle}>
        <h3 style={titleStyle}>üí™ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h3>
        <span style={dateBadgeStyle}>üìÖ {dateText}</span>
      </div>
      <div style={gridStyle}>
        <div style={itemStyle}>
          <div style={labelStyle}>üìè ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á</div>
          <div style={valueStyle}>{health.height} ‡∏ã‡∏°.</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å</div>
          <div style={valueStyle}>{health.weight} ‡∏Å‡∏Å.</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>üí™ ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÑ‡∏Ç‡∏°‡∏±‡∏ô</div>
          <div style={valueStyle}>{health.fat ?? 0} %</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>ü©∫ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô</div>
          <div style={valueStyle}>{health.pressure ?? "-"}</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>üìä ‡∏Ñ‡πà‡∏≤ BMI</div>
          <div style={valueStyle}>{health.bmi}</div>
        </div>
        <div style={{ ...itemStyle, display: "flex", flexDirection: "column", alignItems: "flex-start" }}>
          <div style={labelStyle}>‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</div>
          <span style={statusChipStyle}>{health.status}</span>
        </div>
      </div>
    </div>
  );

  const dateText = new Date(health.date ?? new Date()).toLocaleDateString("th-TH");

  return (
    <div style={cardStyle}>
      <div style={headerStyle}>
        <h3 style={titleStyle}>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h3>
        <span style={dateBadgeStyle}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {dateText}</span>
      </div>
      <div style={gridStyle}>
        <div style={itemStyle}>
          <div style={labelStyle}>‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á</div>
          <div style={valueStyle}>{health.height} ‡∏ã‡∏°.</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å</div>
          <div style={valueStyle}>{health.weight} ‡∏Å‡∏Å.</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÑ‡∏Ç‡∏°‡∏±‡∏ô</div>
          <div style={valueStyle}>{health.fat ?? 0} %</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô</div>
          <div style={valueStyle}>{health.pressure ?? "-"}</div>
        </div>
        <div style={itemStyle}>
          <div style={labelStyle}>‡∏Ñ‡πà‡∏≤ BMI</div>
          <div style={valueStyle}>{health.bmi}</div>
        </div>
        <div style={{ ...itemStyle, display: "flex", flexDirection: "column", alignItems: "flex-start" }}>
          <div style={labelStyle}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</div>
          <span style={statusChipStyle}>{health.status}</span>
        </div>
      </div>
    </div>
  );
}

function getStatusColor(status?: string): string {
  const s = (status || "").toLowerCase();
  if (s.includes("‡∏ú‡∏≠‡∏°") || s.includes("under")) return "#1d4ed8"; // blue
  if (s.includes("‡∏™‡∏°‡∏™‡πà‡∏ß‡∏ô") || s.includes("normal")) return "#065f46"; // green
  if (s.includes("‡πÄ‡∏Å‡∏¥‡∏ô") || s.includes("over")) return "#92400e"; // amber
  if (s.includes("‡∏≠‡πâ‡∏ß‡∏ô") || s.includes("obese")) return "#7f1d1d"; // red-dark
  return "#374151";
}

function getStatusBg(status?: string): string {
  const s = (status || "").toLowerCase();
  if (s.includes("‡∏ú‡∏≠‡∏°") || s.includes("under")) return "#dbeafe"; // blue-100
  if (s.includes("‡∏™‡∏°‡∏™‡πà‡∏ß‡∏ô") || s.includes("normal")) return "#d1fae5"; // green-100
  if (s.includes("‡πÄ‡∏Å‡∏¥‡∏ô") || s.includes("over")) return "#ffedd5"; // amber-100
  if (s.includes("‡∏≠‡πâ‡∏ß‡∏ô") || s.includes("obese")) return "#fee2e2"; // red-100
  return "#f3f4f6"; // gray-100
}

export default HealthDisplay;
