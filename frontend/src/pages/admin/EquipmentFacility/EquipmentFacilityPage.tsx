// src/pages/admin/EquipmentFacility/EquipmentFacilityPage.tsx
import React, { useState, useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import type { Equipment, Facility } from '../../../types'; // ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç type ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢
import { getAllEquipments, getAllFacilities } from '../../../services/apiService';
import './EquipmentFacility.css';

type ViewMode = 'equipment' | 'facility';

const EquipmentFacilityPage: React.FC = () => {
    const navigate = useNavigate();
    const location = useLocation();
    const [viewMode, setViewMode] = useState<ViewMode>('equipment');
    const [equipments, setEquipments] = useState<Equipment[]>([]);
    const [facilities, setFacilities] = useState<Facility[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    const getStatusThai = (status: string) => {
        const statusMap: { [key: string]: string } = {
            'Available': '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
            'Maintenance': '‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á',
            'Broken': '‡πÄ‡∏™‡∏µ‡∏¢',
            'Open': '‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
        };
        return statusMap[status] || status;
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    const getConditionThai = (condition: string) => {
        const conditionMap: { [key: string]: string } = {
            'Good': '‡∏î‡∏µ',
            'Needs Repair': '‡∏ï‡πâ‡∏≠‡∏á‡∏ã‡πà‡∏≠‡∏°',
            'Needs Replacement': '‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô'
        };
        return conditionMap[condition] || condition;
    };

    useEffect(() => {
        const queryParams = new URLSearchParams(location.search);
        const view = queryParams.get('view');
        if (view === 'facility') {
            setViewMode('facility');
        } else {
            setViewMode('equipment');
        }
    }, [location.search]);

    useEffect(() => {
        const fetchData = async () => {
            try {
                setLoading(true);
                const [eqData, faData] = await Promise.all([
                    getAllEquipments(),
                    getAllFacilities(),
                ]);
                setEquipments(Array.isArray(eqData) ? eqData : []);
                setFacilities(Array.isArray(faData) ? faData : []);
                setError(null);
            } catch (err) {
                console.error("Failed to fetch data:", err);
                setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
            } finally {
                setLoading(false);
            }
        };
        fetchData();
    }, []);

    if (loading) return <div>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
    if (error) return <div>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</div>;

    return (
        <div className="main-content">
            <div className="content-section">
                <div className="header-with-button">
                    <h2>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å</h2>
                    <button
                        onClick={() => {
                            if (viewMode === 'equipment') navigate('/equipment/add');
                            else navigate('/facility/add');
                        }}
                        className="add-button-main"
                    >
                        +
                    </button>
                </div>

                <div className="view-toggle">
                    <button onClick={() => navigate('/admin/equipment')} className={viewMode === 'equipment' ? 'active' : ''}>Equipment</button>
                    <button onClick={() => navigate('/admin/equipment?view=facility')} className={viewMode === 'facility' ? 'active' : ''}>Facility</button>
                </div>

                {viewMode === 'equipment' ? (
                    <div className="table-container">
                        <table className="data-table">
                            <thead>
                                <tr>
                                    <th>‡∏ä‡∏∑‡πà‡∏≠</th>
                                    <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                                    <th>‡πÇ‡∏ã‡∏ô</th> {/* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å Location ‡πÄ‡∏õ‡πá‡∏ô Zone */}
                                    <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                                    <th>‡∏™‡∏†‡∏≤‡∏û</th> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° Condition */}
                                    <th>‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</th> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° Usage Hours */}
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {Array.isArray(equipments) && equipments.length > 0 ? (
                                    equipments.map(item => (
                                        <tr key={item.id}>
                                            <td>{item.name}</td>
                                            <td>{item.type}</td>
                                            <td>{item.zone}</td> {/* ‡πÅ‡∏™‡∏î‡∏á Zone */}
                                            <td><span className={`status ${item.status.toLowerCase()}`}>{getStatusThai(item.status)}</span></td>
                                            <td><span className={`condition ${item.condition.toLowerCase().replace(' ', '-')}`}>{getConditionThai(item.condition)}</span></td> {/* ‡πÅ‡∏™‡∏î‡∏á Condition */}
                                            <td>{item.usageHours}</td> {/* ‡πÅ‡∏™‡∏î‡∏á Usage Hours */}
                                            <td className="actions-cell">
                                                <button onClick={() => navigate(`/equipment/edit/${item.id}`)} className="icon-button edit-button">‚úèÔ∏è</button>
                                                <button onClick={() => navigate(`/equipment/delete/${item.id}`)} className="icon-button delete-button">üóëÔ∏è</button>
                                            </td>
                                        </tr>
                                    ))
                                ) : (
                                    <tr><td colSpan={7}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</td></tr>
                                )}
                            </tbody>
                        </table>
                    </div>
                ) : (
                    // ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á Facility ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°
                    <div className="table-container">
                        <table className="data-table">
                            <thead>
                                <tr>
                                    <th>‡∏ä‡∏∑‡πà‡∏≠</th>
                                    <th>‡πÇ‡∏ã‡∏ô</th>
                                    <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                                    <th>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {Array.isArray(facilities) && facilities.length > 0 ? (
                                    facilities.map(item => (
                                        <tr key={item.id}>
                                            <td>{item.name}</td>
                                            <td>{item.zone}</td>
                                            <td><span className={`status ${item.status.toLowerCase()}`}>{getStatusThai(item.status)}</span></td>
                                            <td>{item.capacity}</td>
                                            <td className="actions-cell">
                                                <button onClick={() => navigate(`/facility/edit/${item.id}`)} className="icon-button edit-button">‚úèÔ∏è</button>
                                                <button onClick={() => navigate(`/facility/delete/${item.id}`)} className="icon-button delete-button">üóëÔ∏è</button>
                                            </td>
                                        </tr>
                                    ))
                                ) : (
                                    <tr><td colSpan={5}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</td></tr>
                                )}
                            </tbody>
                        </table>
                    </div>
                )}
            </div>
        </div>
    );
};

export default EquipmentFacilityPage;